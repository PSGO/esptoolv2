name: Fetch Specific JS Files

on:
  schedule:
    - cron: "0 0 * * *" # 每天 00:00 运行
  workflow_dispatch: # 手动触发

jobs:
  fetch-specific-js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch HTML and Extract Main JS URL
        id: fetch_html
        run: |
          # 下载 HTML 文件
          curl -s https://espressif.github.io/esptool-js/ -o page.html

          # 提取动态生成的 JS 文件路径
          SCRIPT_URL=$(grep -oP '(?<=<script src=")index\.\w+\.js(?=" type="module"></script>)' page.html)

          # 拼接完整 URL
          FULL_URL="https://espressif.github.io/esptool-js/$SCRIPT_URL"

          echo "SCRIPT_URL=$SCRIPT_URL" >> $GITHUB_ENV
          echo "FULL_URL=$FULL_URL" >> $GITHUB_ENV

      - name: Download Main JS File
        id: download_main
        run: |
          # 下载主 JS 文件
          curl -s ${{ env.FULL_URL }} -o main.js

          # 修改文件名为 index.js
          mv main.js index.js

      - name: Extract and Download Specific JS Files
        run: |
          # 提取嵌套 JSON 数据
          JSON_RAW=$(grep -oP 'JSON\.parse\(\K.*(?=\);)' index.js)

          # 打印提取的原始 JSON 数据（用于调试）
          echo "Raw JSON Data: $JSON_RAW"

          # 清理数据，去除多余的转义符和引号
          JSON_CLEAN=$(echo $JSON_RAW | sed 's/\\"/"/g' | sed 's/^"//' | sed 's/"$//')

          # 验证清理后的 JSON 数据
          echo "Clean JSON Data: $JSON_CLEAN"

          # 使用 jq 解析 JSON 数据并提取文件列表
          FILE_LIST=$(echo $JSON_CLEAN | jq -r '.[] | select(endswith(".js"))')

          # 打印提取的文件列表（用于调试）
          echo "File List: $FILE_LIST"

          # 关键字数组
          KEYWORDS=("esp32s2" "esp8266" "stub_flasher_32s2" "stub_flasher_8266")

          # 下载包含关键字的文件
          for FILE in $FILE_LIST; do
            for KEY in "${KEYWORDS[@]}"; do
              if [[ $FILE == *"$KEY"* ]]; then
                FILE_URL="https://espressif.github.io/esptool-js/$FILE"
                echo "Downloading $FILE_URL"
                curl -s $FILE_URL -o $(basename $FILE)
              fi
            done
          done

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add .
          git commit -m "Download specific JS files and update index.js"
          git push
